{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Fyle App Developer APIs",
    "version" : "0.1"
  },
  "servers" : [ {
    "url" : "https://staging.fyle.in/api",
    "description" : "Backend server"
  } ],
  "security" : [ {
    "oAuthImplicitScheme" : [ ]
  } ],
  "paths" : {
    "/api/tpa/v1/employees" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get a list of existing Employees matching the parameters",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned, between 1 and 5000.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5000
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Employees" ],
        "summary" : "Create or Update Employees in bulk",
        "description" : "This API takes an array of Employee objects, which would be either created or updated in bulk. <br><br>\nTo create a new Employee, ignore the id field in the Employee and provide the rest of the details. The Name and Email fields are mandatory and must contain a valid value. <br><br>\nTo update the details of an existing Employee, You need to mention either the `id` field or the `email_address` field. If you specify both, they should match the existing data in the database. <br><br>\nNote that once an Employee object is created, the email address cannot be changed through the bulk APIs. The rest of the details like Name, Phone number, etc. can be changed. <br><br>\nIf a field is specified as null in the HTTP request to update an Employee details, then the old value of the field in the database would remain unchanged. <br><br>\nIf an `id` value is specified in the HTTP request, but it does not exist in the database, you will get a HTTP 400 error. If an `id` value is specified in the HTTP request but the email address in the HTTP request does not match the value in the database, you will get a HTTP 400 error. <br><br>\nThis API is atomic, means either all the create and update operations in the request will be executed or none will be executed.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "example" : [ {
                    "row" : 0,
                    "error" : "Mismatched id and email fields.",
                    "description" : "User readable error string explaining why the POST operation failed. The strings coming in this field could be changed and so should not be used programmatically."
                  } ],
                  "items" : {
                    "$ref" : "#/components/schemas/BulkError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden. The user has insufficient privilege to create or update Employees"
          }
        }
      }
    },
    "/api/tpa/v1/employees/count" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get the count of existing Employees",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/expense" : {
      "post" : {
        "tags" : [ "Expense" ],
        "summary" : "Create an Expense for an Employee",
        "description" : "This API takes an Expense, which would be either created or updated. <br>\nTo create a new Expense, ignore the id field in the Expense object and provide the rest of the details. <br>\nTo update the details of an existing Expense, You need to mention the `id` field. However, once created, the email address of the user for whom the Expense was created cannot be changed. The rest of the things like Amount can be changed, until the Expense is added as part of a Report. Once added, none of the details can be changed. <br> \nIf an `id` value is specified in the HTTP request, but if it does not exist in the database or if it is already added to a report, you will get a HTTP 400 error. <br>\nAll expenses created by this method will remain unsubmitted either in DRAFT or COMPLETE state. Updates to existing Expenses may fail, if the Expense is in a non conducive state (For example, if it is already Paid). <br>",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Expense"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden. The user has insufficient privilege to create or update Expenses"
          }
        }
      }
    },
    "/api/tpa/v1/expense/{expense_id}" : {
      "get" : {
        "tags" : [ "Expense" ],
        "summary" : "Get an Expense by Id including the file attachments",
        "parameters" : [ {
          "name" : "expense_id",
          "in" : "path",
          "description" : "Unique ID to find an Expense",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Expense"
                }
              }
            }
          },
          "400" : {
            "description" : "If the expense id specified is invalid or if the logged in user does not have rights to see the Expense, a 400 will be returned."
          }
        }
      }
    },
    "/api/tpa/v1/expense/{expense_id}/attachments" : {
      "get" : {
        "tags" : [ "Expense" ],
        "summary" : "Get all the file attachments associated with an Expense",
        "parameters" : [ {
          "name" : "expense_id",
          "in" : "path",
          "description" : "Unique ID for an Expense",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/expenses" : {
      "get" : {
        "tags" : [ "Expenses" ],
        "summary" : "Get a list of existing Expenses, excluding the file attachments, that match the parameters",
        "description" : "Get a list of the existing Expenses that satisfy the given parameters. Note that the file attachments, used for receipt images, are not returned as part of the Response. The GET method on the individual endpoints `/api/tpa/v1/expense/{expense_id}` or `/api/tpa/v1/expense/{expense_id}/attachments` should be used to get the file attachments.",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned, between 1 and 5000.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5000
          }
        }, {
          "name" : "submitted",
          "in" : "query",
          "description" : "If set to true, all Expenses that are already submitted will alone be returned. If set to false, all Expenses that are not yet submitted will alone be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/expenses/count" : {
      "get" : {
        "tags" : [ "Expenses" ],
        "summary" : "Get the count of existing Expenses that match the given parameters",
        "parameters" : [ {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Expenses that are exported alone will be returned. If set to false, all Expenses that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "submitted",
          "in" : "query",
          "description" : "If set to true, all Expenses that are already submitted will alone be returned. If set to false, all Expenses that are not yet submitted will alone be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/reports" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Get a list of Reports",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned, between 1 and 5000.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5000
          }
        }, {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Reports that are exported alone will be returned. If set to false, all Reports that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/reports/count" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Get the count of Reports that match the parameters",
        "parameters" : [ {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Reports that are exported alone will be returned. If set to false, all Reports that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/categories" : {
      "get" : {
        "tags" : [ "Categories" ],
        "summary" : "Get a list of the existing Categories in the Organization",
        "parameters" : [ {
          "name" : "active_only",
          "in" : "query",
          "description" : "- When set as false, the result will include all the Categories for the organization.<br> - When set as true, the result will exclude the inactive ones. <br>",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/advances" : {
      "get" : {
        "tags" : [ "Advances" ],
        "summary" : "Get a list of existing Advances",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned, between 1 and 5000.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5000
          }
        }, {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Advances that are exported alone will be returned. If set to false, all Advances that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_10"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/advances/count" : {
      "get" : {
        "tags" : [ "Advances" ],
        "summary" : "Get a count of the existing Advances that match the parameters",
        "parameters" : [ {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Advances that are exported alone will be returned. If set to false, all Advances that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/refunds" : {
      "get" : {
        "tags" : [ "Refunds" ],
        "summary" : "Get a list of existing Refunds",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned, between 1 and 5000.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5000
          }
        }, {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Refunds that are exported alone will be returned. If set to false, all Refunds that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_12"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/refunds/count" : {
      "get" : {
        "tags" : [ "Refunds" ],
        "summary" : "Get the count of existing Refunds that match the parameters",
        "parameters" : [ {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Refunds that are exported alone will be returned. If set to false, all Refunds that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/reimbursements" : {
      "get" : {
        "tags" : [ "Reimbursements" ],
        "summary" : "Get Reimbursments that satisfy the parameters",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned, between 1 and 5000.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5000
          }
        }, {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Reimbursements that are exported alone will be returned. If set to false, all Reimbursements that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_14"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/reimbursements/count" : {
      "get" : {
        "tags" : [ "Reimbursements" ],
        "summary" : "Get the number of Reimbursements that satisfy the parameters",
        "parameters" : [ {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Reimbursements that are exported alone will be returned. If set to false, all Reimbursements that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/cost_centers" : {
      "get" : {
        "tags" : [ "Cost Centers" ],
        "summary" : "Get the list of existing CostCenters",
        "parameters" : [ {
          "name" : "active_only",
          "in" : "query",
          "description" : "<br>- When set as false, the result will include all the CostCenters for the organization.<br>- When set as true, the result will exclude the inactive ones.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_16"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/projects" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get the list of existing Projects",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned, between 1 and 5000.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5000
          }
        }, {
          "name" : "active_only",
          "in" : "query",
          "description" : "<br>- When set as false, the result will include all the projects for the organization.<br>- When set as true, the result will exclude the inactive ones.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/projects/count" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get the count of existing Projects that match the parameters",
        "parameters" : [ {
          "name" : "active_only",
          "in" : "query",
          "description" : "<br>- When set as false, the result will include all the Projects for the organization.<br>- When set as true, the result will exclude the inactive ones.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/balance_transfers" : {
      "get" : {
        "tags" : [ "Balance Transfers" ],
        "summary" : "Get a list of existing Balance Transfers",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned, between 1 and 5000.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5000
          }
        }, {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Balance Transfers that are exported alone will be returned. If set to false, all Balance Transfers that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_19"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/balance_transfers/count" : {
      "get" : {
        "tags" : [ "Balance Transfers" ],
        "summary" : "Get the count of existing Balance Transfers",
        "parameters" : [ {
          "name" : "exported",
          "in" : "query",
          "description" : "If set to true, all Balance Transfers that are exported alone will be returned. If set to false, all Balance Transfers that are not yet exported alone will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_20"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/subscriptions/org_subscriptions" : {
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Listen to event updates via webhooks",
        "description" : "This API will register the passed URL to be used as the target URL to which POST requests will be made by Fyle, in case of interesting events. The event_id field identifies the event for which the callback url should be called.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Webhook created"
          }
        },
        "callbacks" : {
          "onData" : {
            "{$request.query.callbackUrl}" : {
              "post" : {
                "requestBody" : {
                  "description" : "Webhook event. HTTP POST call from Fyle to the Callback URL",
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/WebhookEvent"
                      }
                    }
                  }
                },
                "responses" : {
                  "202" : {
                    "description" : "Your server implementation should return either `200` or `202` HTTP status code if the data was received successfully. If not, the request may be retried."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/exports" : {
      "get" : {
        "tags" : [ "Exports" ],
        "summary" : "Returns the details of Third Party Exports",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned, between 1 and 5000.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5000
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Exports" ],
        "summary" : "Mark Third Party Export of Fyle objects as Successful or Failed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "example" : [ {
                    "row" : 0,
                    "error" : "Invalid Expense ID specified"
                  } ],
                  "items" : {
                    "$ref" : "#/components/schemas/BulkError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/exports/count" : {
      "get" : {
        "tags" : [ "Exports" ],
        "summary" : "Returns the count of Third Party Exports, that satisfy the parameters",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                }
              }
            }
          }
        }
      }
    },
    "/api/tpa/v1/export/{export_id}" : {
      "get" : {
        "tags" : [ "Exports" ],
        "summary" : "Get the details of a Third Party Export",
        "parameters" : [ {
          "name" : "export_id",
          "in" : "path",
          "description" : "Unique ID to find a Export",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                }
              }
            }
          },
          "400" : {
            "description" : "If an invalid id is passed or if there is no permission to view this Export, you will get a 400 error."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Employee" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "An unique ID generated by Fyle to identify every Employee in an Organization. This cannot be modified by anyone outside Fyle.",
            "readOnly" : true,
            "example" : "ou12345"
          },
          "employee_email" : {
            "type" : "string",
            "description" : "An Immutable field that represents the email address of the Employee. Must be compliant with https://www.ietf.org/rfc/rfc822.txt RFC 822",
            "format" : "email",
            "example" : "john.doe@example.com"
          },
          "employee_code" : {
            "type" : "string",
            "description" : "This field refers to any string that the client programs can use to refer to an Employee's unique ID. This could be any field such as an UUID from an Active Directory server or Employee ID in a HRMS system. This field shall be ignored in POST requests.",
            "example" : "E84122"
          },
          "full_name" : {
            "type" : "string",
            "description" : "Represents the full name of the Employee. Must be at least 3 characters.",
            "example" : "John Doe"
          },
          "joining_date" : {
            "type" : "string",
            "description" : "Date string in YYYY-MM-DD format",
            "format" : "date"
          },
          "location" : {
            "type" : "string"
          },
          "level" : {
            "type" : "string"
          },
          "business_unit" : {
            "type" : "string"
          },
          "department" : {
            "type" : "string"
          },
          "sub_department" : {
            "type" : "string"
          },
          "approver1_email" : {
            "type" : "string",
            "description" : "Primary approver who will be added as an approver by default for all the submitted reports and expenses. Note that you can not use/have the `id` field value here and can only use/have a valid email address.",
            "format" : "email",
            "example" : "approver1@example.com"
          },
          "approver2_email" : {
            "type" : "string",
            "description" : "A secondary approver who can be added to reports via policies. Note that you can not use/have the `id` field value (of Employee) here and can only use/have a valid email address.",
            "format" : "email",
            "example" : "approver2@example.com"
          },
          "approver3_email" : {
            "type" : "string",
            "description" : "A tertiary approver who can be added to reports via policies. Note that you can not use/have the `id` field value here and can only use/have a valid email address.",
            "format" : "email",
            "example" : "approver3@example.com"
          },
          "title" : {
            "type" : "string"
          },
          "branch_ifsc" : {
            "type" : "string",
            "description" : "IFSC code of the bank account of the Employee. Must be a 11 digit alphanumeric code.",
            "example" : "SBIN0116569"
          },
          "branch_account" : {
            "type" : "string",
            "description" : "The Account number of the bank account of the Employee"
          },
          "mobile" : {
            "type" : "string",
            "description" : "Mobile number of the employee"
          },
          "delegatee_email" : {
            "type" : "string",
            "description" : "The email address of the Employee who will be able to login on-behalf-of this employee. Note that the email address specified here should exist in the database already or created as part of the same HTTP request that sets this field. Note that you can not use the `id` value (of Employee) here and can only use a valid email address here.",
            "format" : "email"
          },
          "default_cost_center_name" : {
            "type" : "string",
            "description" : "The name of the primary CostCenter to which the Employee belongs. Note that you need to use the `name` of the CostCenter and not the `id`."
          },
          "perdiem_names" : {
            "type" : "array",
            "description" : "The list of Perdiem names that are applicable for the Employee",
            "items" : {
              "type" : "string",
              "description" : "The name of the Perdiem that is applicable for this Employee. Note that you need to use the `name` of the Perdiem and not the `id` of the Perdiem."
            }
          },
          "mileage_rate_labels" : {
            "type" : "array",
            "description" : "The list of mileage labels that are applicable for the Employee",
            "items" : {
              "type" : "string",
              "enum" : [ "two_wheeler", "four_wheeler", "four_wheeler1" ]
            }
          },
          "custom_fields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomUserField"
            }
          },
          "disabled" : {
            "type" : "boolean",
            "description" : "Indicates whether an Employee is disabled or not in Fyle. <br>\nDuring POST call, If set to `TRUE`, an active Employee account will be disabled. Setting to `FALSE` will enable an Employee whose account is disabled.<br>",
            "default" : false
          },
          "org_id" : {
            "type" : "string",
            "description" : "The unique ID of the Organization to which the Employee belongs. <br>\nThis field shall be ignored in POST requests.",
            "example" : "o12334"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The Name of the Organization to which the Employee belongs. <br>\nThis field shall be ignored in POST requests.",
            "example" : "Ministry of Magic"
          }
        }
      },
      "Expense" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "An unique string to identify the Expense. Ignore this field when used as part of a POST request to create an Expense.",
            "example" : "tx12345"
          },
          "employee_id" : {
            "type" : "string",
            "description" : "An unique ID, generated by Fyle, for identifying the Employee. Once an Expense is created, the value of this field cannot be changed and is immutable. <br>\nThis field shall be ignored in POST requests when updating an Expense.",
            "example" : "ou12345Zdfx"
          },
          "employee_email" : {
            "type" : "string",
            "description" : "Email address of the Employee for whom the expense was/will-be created. Once an Expense is created, the value of this field cannot be changed and is immutable. <br>\nThis field shall be ignored in POST requests when updating an Expense.",
            "format" : "email",
            "example" : "john.doe@example.com"
          },
          "employee_code" : {
            "type" : "string",
            "description" : "This refers to a string that is associated with an Employee, which can be used to identify the Employee in any other third party systems, such as a UUID of Active Directory or Employee ID in a HRMS system. Note that this field is not used by Fyle for any of its operations. Fyle works on only the `employee_id` field and the `employee_email` fields to represent Employees. <br>\nThis field shall be ignored in POST calls to create/update Expenses.",
            "readOnly" : true
          },
          "spent_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the transaction for which the expense [being] fyled was made. <br>\nThis date cannot be in future.",
            "format" : "date-time"
          },
          "amount" : {
            "type" : "number",
            "description" : "The transaction amount for which the expense was/will-be fyled. The amount will be in the currency that the organization is setup with in case of GET requests. <br>\nNote that, when used as part of creating an Expense via POST, the actual amount in the Expense, in a subsequent GET call, may get changed either because of policies or admin/approvers changing the amount.",
            "example" : 1984.18
          },
          "purpose" : {
            "type" : "string",
            "description" : "Justification for the expense.",
            "example" : "Team lunch"
          },
          "project_id" : {
            "type" : "integer",
            "description" : "The ID generated by Fyle to uniquely identify the Project, to which the Expense belongs. <br>",
            "format" : "int32",
            "example" : 1234
          },
          "project_name" : {
            "type" : "string",
            "description" : "The Name of the Project to which the Expense belongs. <br>\nThis field shall be ignored in POST requests.",
            "example" : "Hogwarts Project"
          },
          "cost_center_id" : {
            "type" : "integer",
            "description" : "The ID generated by Fyle to uniquely identify the CostCenter, to which the Expense belongs. <br>",
            "format" : "int32",
            "example" : 1234
          },
          "cost_center_name" : {
            "type" : "string",
            "description" : "The Name of the CostCenter to which the Expense belongs. <br> This field shall be ignored in POST requests.",
            "example" : "Hogwarts CostCenter"
          },
          "category_id" : {
            "type" : "integer",
            "description" : "The unique ID of a Category to which the Expense belongs. <br>\nUse `GET /api/tpa/v1/categories` to get the list of valid ID and Name of the Categories for the organization.",
            "format" : "int32",
            "example" : 18
          },
          "category_name" : {
            "type" : "string",
            "description" : "The Name of a Category to which the Expense belongs. <br> This field shall be ignored in POST requests.",
            "example" : "Food"
          },
          "currency" : {
            "type" : "string",
            "description" : "ISO 4217 currency codes that are usually of three upper case letters. See \"https://www.iban.com/currency-codes\" for examples. If this field is ignored during a POST call to create/update an Expense, the default currency of the organization will be used.",
            "example" : "USD"
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the Expense. This field shall be ignored in POST calls when creating/updating an Expense.",
            "enum" : [ "COMPLETE", "DRAFT", "PAID", "PAYMENT_PROCESSING", "APPROVER_PENDING", "PAYMENT_PENDING", "APPROVED" ]
          },
          "reimbursable" : {
            "type" : "boolean"
          },
          "created_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the Expense was created. <br>\nThis field shall be ignored in POST calls to create/update Expenses.",
            "format" : "date-time",
            "readOnly" : true
          },
          "approved_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the Expense was approved. This field could be null if the Expense was never added to a Report or if not yet approved. <br>\nThis field shall be ignored in POST calls to create/update Expenses.",
            "format" : "date-time",
            "readOnly" : true
          },
          "verified" : {
            "type" : "boolean",
            "description" : "Indicates whether the Expense is verified or not",
            "readOnly" : true
          },
          "verified_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the Expense was verified. If the Expense is not verified yet, this could be null. <br>\nThis field shall be ignored in POST calls to create/update Expenses.",
            "format" : "date-time",
            "readOnly" : true
          },
          "reimbursed_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the Expense was Reimbursed. If the Expense is not reimbursed yet, this could be null. <br>\nThis field shall be ignored in POST calls to create/update Expenses.",
            "format" : "date-time",
            "readOnly" : true
          },
          "report_submitted_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the Expense was submitted via a Report to the Approvers. If the Expense is not added to a Report yet or if the Report is not yet submitted, this could be null. <br>\nThis field shall be ignored in POST calls to create/update Expenses.",
            "format" : "date-time",
            "readOnly" : true
          },
          "vendor" : {
            "type" : "string",
            "description" : "String denoting the name of the vendor to which the Expense was made",
            "example" : "Uber"
          },
          "has_attachments" : {
            "type" : "boolean",
            "description" : "Returns if there are file attachments that the Expense has. Usually the image of the receipts are added as attachments to the Expenses. This field shall be ignored in POST calls to create/update Expenses."
          },
          "attachments" : {
            "type" : "array",
            "description" : "This field will not be present in the response for the GET method on the `/api/tpa/v1/expenses` call.",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            }
          },
          "custom_properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExpenseCustomProperty"
            }
          },
          "org_id" : {
            "type" : "string",
            "description" : "The unique ID of the Organization to which the Expense belongs. <br>\nThis field shall be ignored in POST requests.",
            "example" : "o12334"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The Name of the Organization to which the Expense belongs. <br>\nThis field shall be ignored in POST requests.",
            "example" : "Ministry of Magic"
          }
        }
      },
      "ExpenseCustomProperty" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the Custom Property for the Expense",
            "example" : "Pincode"
          },
          "value" : {
            "description" : "The value for the Custom Property for this Expense. This could be a String, Boolean, Integer or an Array of Strings, depending on the type of the Custom Property. \nIf the Custom Property is of a Select type where a pre-defined set of values are only allowed, and in POST requests if a bad value is passed, HTTP 400 will be returned.\nFor example, if there is a Custom Property called Gender that accepts only `Male`, `Female`, `Others` and if you specify, `NA` in your POST request, you will get an Error.",
            "example" : 560001,
            "oneOf" : [ {
              "type" : "string"
            }, {
              "type" : "boolean"
            }, {
              "type" : "integer",
              "format" : "int32"
            }, {
              "$ref" : "#/components/schemas/Location"
            }, {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            } ]
          }
        }
      },
      "Report" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "An unique string to identify the Report",
            "example" : "rpFcCjEM9Fk2"
          },
          "employee_id" : {
            "type" : "string",
            "description" : "An unique ID, generated by Fyle, for identifying the Employee who created the Report.",
            "example" : "ou12345Zdfx"
          },
          "employee_email" : {
            "type" : "string",
            "description" : "Email address of the Employee who created the Report.",
            "format" : "email",
            "example" : "john.doe@example.com"
          },
          "employee_code" : {
            "type" : "string",
            "description" : "This refers to a string that is associated with an Employee, which can be used to identify the Employee in any other third party systems, such as a UUID of Active Directory or Employee ID in a HRMS system. Note that this field is not used by Fyle for any of its operations. Fyle works on only the `employee_id` field and the `employee_email` fields to represent Employees. <br>",
            "readOnly" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "APPROVER_INQUIRY", "DRAFT", "PAID", "APPROVER_PENDING", "PAYMENT_PENDING", "PAYMENT_PROCESSING", "APPROVED" ]
          },
          "amount" : {
            "type" : "number"
          },
          "purpose" : {
            "type" : "string"
          },
          "claim_number" : {
            "type" : "string"
          },
          "transaction_ids" : {
            "type" : "array",
            "example" : [ "txxcn66RgUwp", "txbEIxmb6agD" ],
            "items" : {
              "type" : "string"
            }
          },
          "export_ids" : {
            "type" : "array",
            "description" : "Unique IDs generated by Fyle to refer to Exports. This field shall be ignored in POST calls to create/update a Report. These IDs can be used in the `GET /api/tpa/v1/export/{export_id}` call.",
            "items" : {
              "type" : "string"
            }
          },
          "created_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the Report was created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "approved_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the Report was approved. This field could be null if the Report was not yet approved.",
            "format" : "date-time",
            "readOnly" : true
          },
          "verified" : {
            "type" : "boolean",
            "description" : "Indicates whether the Report is verified or not",
            "readOnly" : true
          },
          "verified_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the Report was verified. If the Report is not verified yet, this could be null.",
            "format" : "date-time",
            "readOnly" : true
          },
          "reimbursed_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the Report was Reimbursed. If the Report is not reimbursed or submitted yet, this could be null.",
            "format" : "date-time",
            "readOnly" : true
          },
          "submitted_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp on which the Report was submitted to the Approvers. If the Report is not yet submitted, this could be null. <br>",
            "format" : "date-time",
            "readOnly" : true
          },
          "org_id" : {
            "type" : "string",
            "description" : "The unique ID of the Organization to which the Report belongs",
            "example" : "o12334"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The Name of the Organization to which the Report belongs",
            "example" : "Ministry of Magic"
          }
        }
      },
      "Attachment" : {
        "properties" : {
          "filename" : {
            "type" : "string",
            "description" : "Name of the attachment file",
            "example" : "LunchReceipt.jpg"
          },
          "content" : {
            "type" : "string",
            "description" : "File contents base64 encoded into a string.",
            "example" : "SGVsbG8gV29ybGQ="
          },
          "password" : {
            "type" : "string",
            "description" : "An optional password string that could be used to open the file",
            "example" : "Password123$"
          }
        }
      },
      "Category" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "An unique integer to identify a Category for an Organization.",
            "format" : "int32",
            "example" : 1234
          },
          "name" : {
            "type" : "string",
            "description" : "An user-readable string explaining what the name of the Category is.",
            "example" : "Courier"
          },
          "code" : {
            "type" : "string",
            "description" : "A code that might be used to uniquely identify what a Category is. This could be reference to ID fields in other external systems.",
            "example" : "C-1001"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Indicates whether the category is active or not."
          },
          "fyle_category" : {
            "type" : "string"
          },
          "sub_category" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "org_id" : {
            "type" : "string",
            "description" : "The unique ID of the Organization to which the Category belongs",
            "example" : "o12334"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The Name of the Organization to which the Report belongs",
            "example" : "Ministry of Magic"
          }
        }
      },
      "Advance" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "An unique string to identify the Advance.",
            "example" : "advalYQBwg4d8"
          },
          "employee_id" : {
            "type" : "string",
            "description" : "An unique ID, generated by Fyle, for identifying the Employee for whom the Advance was created",
            "example" : "ou12AzSc2f"
          },
          "employee_email" : {
            "type" : "string",
            "description" : "Email address of the Employee for whom the Advance was created",
            "format" : "email",
            "example" : "john.doe@example.com"
          },
          "employee_code" : {
            "type" : "string",
            "description" : "This refers to a string that is associated with an Employee, which can be used to identify the Employee in any other third party systems, such as a UUID of Active Directory or Employee ID in a HRMS system. Note that this field is not used by Fyle for any of its operations. Fyle works on only the `employee_id` field and the `employee_email` fields to represent Employees. <br>",
            "readOnly" : true
          },
          "org_id" : {
            "type" : "string",
            "description" : "The unique ID of the Organization to which the Advance belongs",
            "example" : "o12334"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The Name of the Organization to which the Advance belongs",
            "example" : "Ministry of Magic"
          },
          "project_id" : {
            "type" : "integer",
            "description" : "An unique ID, generated by Fyle, for identifying the Project to which the Report belongs",
            "format" : "int32",
            "example" : 1234
          },
          "project_name" : {
            "type" : "string",
            "description" : "The Name of the Project to which the Report belongs",
            "example" : "Hogwarts Project"
          },
          "currency" : {
            "type" : "string",
            "description" : "ISO 4217 currency codes that are usually of three upper case letters. See \"https://www.iban.com/currency-codes\" for examples.",
            "example" : "USD"
          },
          "amount" : {
            "type" : "number",
            "description" : "The value of the Advance",
            "example" : 2012.18
          },
          "purpose" : {
            "type" : "string",
            "description" : "A justification for why this Advance was needed",
            "example" : "For setting up of kiosks"
          },
          "issued_at" : {
            "type" : "string",
            "description" : "RFC 3339, section 5.6 \"https://tools.ietf.org/html/rfc3339#section-5.6\" compliant timestamp field that denotes the date and time on which the Advance was issued. <br>\nExample: \"2017-07-21T17:32:28Z\"",
            "format" : "date-time"
          },
          "payment_mode" : {
            "type" : "string",
            "enum" : [ "Bank transfer", "Cash", "Cheque/DD", "Forex card" ]
          },
          "original_currency" : {
            "type" : "string",
            "description" : "ISO 4217 currency codes that are usually of three upper case letters. See \"https://www.iban.com/currency-codes\" for examples. This field will have valid value only when the `payment_mode` parameter is of type `Forex card`.",
            "example" : "USD"
          },
          "original_amount" : {
            "type" : "number",
            "description" : "This field will have valid value only when the `payment_mode` parameter is of type `Forex card`.",
            "example" : 112.22
          },
          "reference" : {
            "type" : "string",
            "description" : "Any descriptive string or number that will be associated with this Advance. For example, Bank transaction numbers or NEFT transaction ids or SWIFT reference numbers, etc."
          },
          "exported" : {
            "type" : "boolean",
            "description" : "Indicates whether there is an Export for this item."
          },
          "export_ids" : {
            "type" : "array",
            "description" : "Unique IDs generated by Fyle to refer to Exports. These IDs can be used in the `GET /api/tpa/v1/export/{export_id}` call.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Refund" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Uniquely identifies each Refund."
          },
          "employee_id" : {
            "type" : "string",
            "description" : "An unique ID, generated by Fyle, for identifying the Employee for whom the Refund was created",
            "example" : "ou12AzSc2f"
          },
          "employee_email" : {
            "type" : "string",
            "description" : "Email address of the Employee for whom the Refund was created",
            "format" : "email",
            "example" : "john.doe@example.com"
          },
          "employee_code" : {
            "type" : "string",
            "description" : "This refers to a string that is associated with an Employee, which can be used to identify the Employee in any other third party systems, such as a UUID of Active Directory or Employee ID in a HRMS system. Note that this field is not used by Fyle for any of its operations. Fyle works on only the `employee_id` field and the `employee_email` fields to represent Employees. <br>",
            "readOnly" : true
          },
          "collector_employee_id" : {
            "type" : "string",
            "readOnly" : true
          },
          "collector_employee_email" : {
            "type" : "string",
            "format" : "email",
            "readOnly" : true
          },
          "collector_employee_code" : {
            "type" : "string",
            "readOnly" : true
          },
          "returnee_employee_id" : {
            "type" : "string",
            "readOnly" : true
          },
          "returnee_employee_email" : {
            "type" : "string",
            "format" : "email",
            "readOnly" : true
          },
          "returnee_employee_code" : {
            "type" : "string",
            "readOnly" : true
          },
          "org_id" : {
            "type" : "string",
            "description" : "The unique ID of the Organization to which the Refund belongs",
            "example" : "o12334"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The Name of the Organization to which the Refund belongs",
            "example" : "Ministry of Magic"
          },
          "payment_mode" : {
            "type" : "string",
            "enum" : [ "Bank transfer", "Cash", "Cheque/DD", "Forex card" ]
          },
          "original_currency" : {
            "type" : "string",
            "description" : "ISO 4217 currency codes that are usually of three upper case letters. See \"https://www.iban.com/currency-codes\" for examples. This field will have valid value only when the `payment_mode` parameter is of type `Forex card`.",
            "example" : "USD"
          },
          "original_amount" : {
            "type" : "number",
            "description" : "This field will have valid value only when the `payment_mode` parameter is of type `Forex card`.",
            "example" : 112.22
          },
          "advance_account" : {
            "type" : "string",
            "description" : "The name of the `Advance Account` to which this refund belongs."
          },
          "reference" : {
            "type" : "string",
            "description" : "Any descriptive string or number that is associated with this Advance. For example, Bank transaction numbers or NEFT transaction ids or SWIFT reference numbers, etc."
          },
          "amount" : {
            "type" : "number",
            "description" : "The Refund amount, represented in the default currency of the organization, collected back from the Employee."
          },
          "note" : {
            "type" : "string",
            "description" : "Any textual description explaining the details of the Refund"
          },
          "exported" : {
            "type" : "boolean",
            "description" : "Indicates whether there is an Export for this item."
          },
          "export_ids" : {
            "type" : "array",
            "description" : "Unique IDs generated by Fyle to refer to Exports. These IDs can be used in the `GET /api/tpa/v1/export/{export_id}` call.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Reimbursement" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "An unique string to identify each Reimbursement in the organization.",
            "example" : "reimcn25OVIBQS"
          },
          "employee_id" : {
            "type" : "string",
            "description" : "An unique ID, generated by Fyle, for identifying the Employee for whom the Reimbursement was created",
            "example" : "ou12AzSc2f"
          },
          "employee_email" : {
            "type" : "string",
            "description" : "Email address of the Employee for whom the Reimbursement was created",
            "format" : "email",
            "example" : "john.doe@example.com"
          },
          "employee_code" : {
            "type" : "string",
            "description" : "This refers to a string that is associated with an Employee, which can be used to identify the Employee in any other third party systems, such as a UUID of Active Directory or Employee ID in a HRMS system. Note that this field is not used by Fyle for any of its operations. Fyle works on only the `employee_id` field and the `employee_email` fields to represent Employees. <br>",
            "readOnly" : true
          },
          "org_id" : {
            "type" : "string",
            "description" : "The unique ID of the Organization to which the Reimbursement belongs",
            "example" : "o12334"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The Name of the Organization to which the Reimbursement belongs",
            "example" : "Ministry of Magic"
          },
          "currency" : {
            "type" : "string",
            "description" : "ISO 4217 currency codes that are usually of three upper case letters. See \"https://www.iban.com/currency-codes\" for examples.",
            "example" : "USD"
          },
          "amount" : {
            "type" : "number",
            "description" : "The value of the Reimbursement",
            "example" : 1983.18
          },
          "state" : {
            "type" : "string",
            "enum" : [ "COMPLETE", "PENDING" ]
          },
          "report_ids" : {
            "type" : "array",
            "description" : "The `id`s of the Reports which are covered under this Reimbursement.",
            "example" : [ "rpbx9cGMCsxg", "rp34iwt3PLZu" ],
            "items" : {
              "type" : "string"
            }
          },
          "unique_id" : {
            "type" : "string",
            "description" : "A pseudo-unique ID to refer to this Reimbursement. For all practical purposes use the `id` field instead of this.",
            "example" : "P/2018/07/R/459"
          },
          "purpose" : {
            "type" : "string",
            "example" : "Shopping reimbursement for Ronald Weasly"
          },
          "accounting_exported" : {
            "type" : "boolean",
            "description" : "Indicates whether or not this Reimbursement has been exported to a third party account system (such as Quickbooks), if one was configured for the organization."
          },
          "exported" : {
            "type" : "boolean",
            "description" : "Indicates whether there is an Export for this item."
          },
          "export_ids" : {
            "type" : "array",
            "description" : "Unique IDs generated by Fyle to refer to Exports. These IDs can be used in the `GET /api/tpa/v1/export/{export_id}` call.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CustomUserField" : {
        "properties" : {
          "custom_field_name" : {
            "type" : "string",
            "description" : "Name of a custom user field configured for the org. It should be always prefixed with `CF:\\ ` string",
            "example" : "CF: Gender"
          },
          "custom_field_value" : {
            "description" : "The value for the CustomUserField for this Employee. This could be a String, Boolean, Integer or an Array of Strings. \nIf the CustomUserField is of a Select type where a pre-defined set of values are only allowed, and in POST requests if a bad value is passed, HTTP 400 will be returned.\nFor example, if there is a custom field called Gender that accepts only `Male`, `Female`, `Others` and if you specify, `NA` you will get an Error.",
            "example" : "Male",
            "oneOf" : [ {
              "type" : "string"
            }, {
              "type" : "boolean"
            }, {
              "type" : "integer",
              "format" : "int32"
            }, {
              "$ref" : "#/components/schemas/Location"
            }, {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            } ]
          }
        }
      },
      "Location" : {
        "properties" : {
          "city" : {
            "type" : "string",
            "example" : "London"
          },
          "state" : {
            "type" : "string",
            "example" : "California"
          },
          "country" : {
            "type" : "string",
            "example" : "India"
          },
          "display_name" : {
            "type" : "string"
          },
          "formatted_address" : {
            "type" : "string",
            "example" : "4, Privet Drive, London"
          },
          "latitude" : {
            "type" : "number",
            "example" : 12.971599
          },
          "longitude" : {
            "type" : "number",
            "example" : 77.594566
          }
        }
      },
      "Project" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "An integer to uniquely identify a Project.",
            "format" : "int32",
            "example" : 1234
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Project. The name of a cost center cannot be updated after creation and remains immutable. <br>",
            "example" : "Hogwarts Project"
          },
          "description" : {
            "type" : "string",
            "example" : "The school for witchcraft and wizardry"
          },
          "active" : {
            "type" : "boolean"
          },
          "approver1_employee_id" : {
            "type" : "string",
            "readOnly" : true
          },
          "approver1_employee_email" : {
            "type" : "string",
            "format" : "email",
            "readOnly" : true,
            "example" : "mcgonagall@example.com"
          },
          "approver1_employee_code" : {
            "type" : "string",
            "readOnly" : true
          },
          "approver2_employee_id" : {
            "type" : "string",
            "readOnly" : true
          },
          "approver2_employee_email" : {
            "type" : "string",
            "format" : "email",
            "readOnly" : true,
            "example" : "dumbledore@example.com"
          },
          "approver2_employee_code" : {
            "type" : "string",
            "readOnly" : true
          },
          "org_id" : {
            "type" : "string",
            "description" : "The unique ID of the Organization to which the Project belongs",
            "example" : "o12334"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The Name of the Organization to which the Project belongs",
            "example" : "Ministry of Magic"
          }
        }
      },
      "CostCenter" : {
        "required" : [ "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "An integer to uniquely identify a Cost Center.",
            "format" : "int32",
            "example" : 2345
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the CostCenter. The name of a cost center cannot be updated after creation and remains immutable. <br>",
            "example" : "Research and Development"
          },
          "description" : {
            "type" : "string",
            "description" : "Textual description of the purpose of the CostCenter",
            "example" : "Covers all the employees under Dumbledore's organization"
          },
          "code" : {
            "type" : "string",
            "description" : "An optional, non-unique alpha-numeric code to identify the CostCenter within the organization.",
            "example" : "RD0001"
          },
          "active" : {
            "type" : "boolean",
            "description" : "Indicates whether the CostCenter is active or not."
          },
          "org_id" : {
            "type" : "string",
            "description" : "The unique ID of the Organization to which the CostCenter belongs",
            "example" : "o12334"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The Name of the Organization to which the CostCenter belongs",
            "example" : "Ministry of Magic"
          }
        },
        "example" : {
          "name" : "Finance",
          "code" : 1,
          "description" : "Finance department cost center",
          "active" : true
        }
      },
      "BalanceTransfer" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A string that uniquely identifies each BalanceTransfer",
            "example" : "btm06qR55siq"
          },
          "employee_id" : {
            "type" : "string",
            "description" : "An unique ID, generated by Fyle, for identifying the Employee for whom the BalanceTransfer was created",
            "example" : "ou12AzSc2f"
          },
          "employee_email" : {
            "type" : "string",
            "description" : "Email address of the Employee for whom the BalanceTransfer was created",
            "format" : "email",
            "example" : "john.doe@example.com"
          },
          "employee_code" : {
            "type" : "string",
            "description" : "This refers to a string that is associated with an Employee, which can be used to identify the Employee in any other third party systems, such as a UUID of Active Directory or Employee ID in a HRMS system. Note that this field is not used by Fyle for any of its operations. Fyle works on only the `employee_id` field and the `employee_email` fields to represent Employees. <br>",
            "readOnly" : true
          },
          "issuer_employee_id" : {
            "type" : "string",
            "description" : "An unique ID, generated by Fyle, for identifying the Employee who is the Issuer for the BalanceTransfer",
            "example" : "ou12AzSc2f"
          },
          "issuer_employee_email" : {
            "type" : "string",
            "description" : "Email address of the Issuer",
            "format" : "email",
            "example" : "george.doe@example.com"
          },
          "issuer_employee_code" : {
            "type" : "string",
            "description" : "This refers to a string that is associated with an Employee, which can be used to identify the Employee in any other third party systems, such as a UUID of Active Directory or Employee ID in a HRMS system. Note that this field is not used by Fyle for any of its operations. Fyle works on only the `employee_id` field and the `employee_email` fields to represent Employees. <br>",
            "readOnly" : true
          },
          "org_id" : {
            "type" : "string",
            "description" : "The unique ID of the Organization to which the BalanceTransfer belongs",
            "example" : "o12334"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The Name of the Organization to which the BalanceTransfer belongs",
            "example" : "Ministry of Magic"
          },
          "amount" : {
            "type" : "number",
            "example" : 2237
          },
          "currency" : {
            "type" : "string",
            "description" : "ISO 4217 currency codes that are usually of three upper case letters. See \"https://www.iban.com/currency-codes\" for examples.",
            "example" : "USD"
          },
          "note" : {
            "type" : "string",
            "description" : "A string to denote any details about the BalanceTransfer, such as the purpose of the BalanceTransfer made.",
            "example" : "Balance Transfer to adjust for the June Advance balance amount"
          },
          "issued_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "source_account" : {
            "type" : "string",
            "description" : "The name of the account that was involved in the Balance Transfer",
            "example" : "Hermione's personal account"
          },
          "exported" : {
            "type" : "boolean",
            "description" : "Indicates whether there is an Export for this item."
          },
          "export_ids" : {
            "type" : "array",
            "description" : "Unique IDs generated by Fyle to refer to Exports. These IDs can be used in the `GET /api/tpa/v1/export/{export_id}` call.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BulkError" : {
        "properties" : {
          "row" : {
            "type" : "integer",
            "description" : "The position of the object, in the array in the request, which faced the error.",
            "format" : "int32",
            "example" : 0
          },
          "error" : {
            "type" : "string",
            "description" : "An user-readable string that explains what the error is. The string shoudl not be used programmatically as this is not guaranteed to remain constant.",
            "example" : "Another project by that name already exists"
          }
        }
      },
      "WebhookEvent" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "An unique ID for the WebhookEvent"
          },
          "event_id" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ]
          },
          "data_type" : {
            "type" : "string",
            "enum" : [ "Advance", "Balance Transfer", "Refund", "Reimbursement", "Report" ]
          },
          "data" : {
            "type" : "string",
            "description" : "A JSON encoded string of the individual event payloads. <br><br>\n\nFor example, a sample Report event could be: <br>\n```json\n{\n  \"id\": \"rpFcCjEM9Fk2\",\n  \"employee_id\": \"ou12345Zdfx\",\n  \"employee_email\": \"john.doe@example.com\",\n  \"employee_code\": \"E18281888\",\n  \"state\": \"APPROVER_INQUIRY\",\n  \"amount\": 10,\n  \"purpose\": \"Team Lunch\",\n  \"claim_number\": \"C/2018/08/R/408\",\n  \"transaction_ids\": [\n    \"txxcn66RgUwp\",\n    \"txbEIxmb6agD\"\n  ],\n  \"created_at\": \"2018-11-09T12:34:47.251Z\",\n  \"approved_at\": \"2018-11-09T12:34:47.251Z\",\n  \"verified\": true,\n  \"verified_at\": \"2018-11-09T12:34:47.251Z\",\n  \"org_id\": \"o12334\",\n  \"org_name\": \"Ministry of Magic\"\n}\n```\n"
          }
        },
        "description" : "WebhookEvent refers to the HTTP POST callback payload to a Webhooks url"
      },
      "ExportNotify" : {
        "properties" : {
          "object_id" : {
            "type" : "string",
            "description" : "An Unique ID generated by Fyle to identify an object such as an Expense, Report or an Advance"
          },
          "object_type" : {
            "type" : "string",
            "enum" : [ "Advance", "Balance Transfer", "Refund", "Reimbursement", "Report" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Indicates whether the Export was done succesfully or not",
            "enum" : [ "SUCCESS", "FAILURE" ]
          },
          "description" : {
            "type" : "string",
            "description" : "An optional note on the Export operation"
          },
          "reference" : {
            "type" : "string",
            "description" : "Optional metadata about the Export operation. For example, newly created Accounting Entry numbers in Quickbooks."
          },
          "url" : {
            "type" : "string",
            "description" : "An optional URL where the exported data could be accessed",
            "format" : "uri"
          },
          "error" : {
            "type" : "string",
            "description" : "Any optional error message indicating why an Export failed"
          },
          "batch_id" : {
            "type" : "string",
            "description" : "An optional id of the batch job on which the Export was done"
          }
        },
        "description" : "Used as a part of a POST call from a Third Party Service to Fyle, to indicate whether an Export of a Fyle object to a third party service (like payroll, accounting software) is successful or not"
      },
      "Export" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "An unique ID for the Third Party Export"
          },
          "object_id" : {
            "type" : "string",
            "description" : "An Unique ID generated by Fyle to identify an object such as an Expense, Report or an Advance that got marked as Exported (either SUCCESS or FAILURE)."
          },
          "object_type" : {
            "type" : "string",
            "enum" : [ "Advance", "Balance Transfer", "Refund", "Reimbursement", "Report" ]
          },
          "exported_at" : {
            "type" : "string",
            "description" : "The timestamp at which the Export was conveyed to Fyle, via the Third Party APIs",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "description" : "An optional note on the Export operation"
          },
          "reference" : {
            "type" : "string",
            "description" : "Optional metadata about the Export operation. For example, newly created Accounting Entry numbers in Quickbooks."
          },
          "url" : {
            "type" : "string",
            "description" : "An optional URL where the exported data could be accessed",
            "format" : "uri"
          },
          "error" : {
            "type" : "string",
            "description" : "Any optional error message indicating why an Export failed"
          },
          "status" : {
            "type" : "string",
            "description" : "Indicates whether the Export was done succesfully or not",
            "enum" : [ "SUCCESS", "FAILURE" ]
          },
          "batch_id" : {
            "type" : "string",
            "description" : "An optional id of the batch job on which the Export was done"
          },
          "org_id" : {
            "type" : "string",
            "description" : "An unique ID of the Organization for which the Export was made"
          },
          "org_name" : {
            "type" : "string",
            "description" : "The name of the Organization for which the Export was made"
          },
          "employee_id" : {
            "type" : "string",
            "description" : "Unique ID of the Employee who made the Export",
            "example" : "ou12345xcz"
          },
          "employee_email" : {
            "type" : "string",
            "description" : "The email address of the Employee who made the Export",
            "format" : "email"
          },
          "employee_code" : {
            "type" : "string",
            "description" : "The code of the Employee who made the Export",
            "example" : "123e4567-e89b-12d3-a456-426655440000"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
            "format" : "int32"
          },
          "resource_type" : {
            "type" : "string",
            "example" : "employee"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/employees"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of objects returned in this response",
            "format" : "int32",
            "example" : 1
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Employee"
            }
          }
        }
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Employee"
            }
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Employee"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/employees"
          },
          "ids" : {
            "type" : "array",
            "example" : [ "ouDGLBDaoNlL", "ouNy8crBynJM" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Employee"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/employees/count"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of items that matches the request parameters",
            "format" : "int32",
            "example" : 18
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Expense"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/expense"
          },
          "id" : {
            "type" : "string",
            "example" : "txI08zgNTuuK"
          }
        }
      },
      "inline_response_400" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string",
            "description" : "User readable error string explaining why the POST operation failed. The strings coming in this field could be changed and so should not be used programmatically.",
            "example" : "Mismatched id and Email address fields. Email address cannot be changed for an Expense."
          }
        }
      },
      "inline_response_200_4" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Attachment"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/expense/{expense_id}/attachments"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            }
          }
        }
      },
      "inline_response_200_5" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Expense"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/expenses"
          },
          "data" : {
            "type" : "array",
            "example" : [ {
              "id" : "tx12345",
              "email" : "john.doe@example.com",
              "date_of_spend" : "2017-07-21T17:32:28Z",
              "amount" : 1984.18,
              "purpose" : "Team lunch",
              "project" : "string",
              "category" : 18,
              "currency" : "USD",
              "state" : "COMPLETE",
              "reimbursable" : true,
              "vendor" : "Uber",
              "has_attachments" : true
            } ],
            "items" : {
              "$ref" : "#/components/schemas/Expense"
            }
          }
        }
      },
      "inline_response_200_6" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Expense"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/expenses/count"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of items that matches the request parameters",
            "format" : "int32",
            "example" : 18
          }
        }
      },
      "inline_response_200_7" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Report"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/reports"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Report"
            }
          }
        }
      },
      "inline_response_200_8" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Report"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/reports/count"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of items that matches the request parameters",
            "format" : "int32",
            "example" : 18
          }
        }
      },
      "inline_response_200_9" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Category"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/categories"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Category"
            }
          }
        }
      },
      "inline_response_200_10" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
            "format" : "int32"
          },
          "resource_type" : {
            "type" : "string",
            "example" : "Advances"
          },
          "url" : {
            "type" : "string",
            "example" : "/advances"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of objects returned in this response",
            "format" : "int32",
            "example" : 1
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Advance"
            }
          }
        }
      },
      "inline_response_200_11" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Advance"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/advances/count"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of items that matches the request parameters",
            "format" : "int32",
            "example" : 18
          }
        }
      },
      "inline_response_200_12" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
            "format" : "int32"
          },
          "resource_type" : {
            "type" : "string",
            "example" : "Refunds"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/refunds"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of objects returned in this response",
            "format" : "int32",
            "example" : 1
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Refund"
            }
          }
        }
      },
      "inline_response_200_13" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Refund"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/refunds/count"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of items that matches the request parameters",
            "format" : "int32",
            "example" : 18
          }
        }
      },
      "inline_response_200_14" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
            "format" : "int32"
          },
          "resource_type" : {
            "type" : "string",
            "example" : "Reimbursements"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/reimbursements"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of objects returned in this response",
            "format" : "int32",
            "example" : 1
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Reimbursement"
            }
          }
        }
      },
      "inline_response_200_15" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Reimbursement"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/reimbursements/count"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of items that matches the request parameters",
            "format" : "int32",
            "example" : 18
          }
        }
      },
      "inline_response_200_16" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
            "format" : "int32"
          },
          "resource_type" : {
            "type" : "string",
            "example" : "Cost Centers"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/cost_centers"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of objects returned in this response",
            "format" : "int32",
            "example" : 1
          },
          "data" : {
            "type" : "array",
            "example" : [ {
              "id" : 137,
              "name" : "Research and Development",
              "description" : "Covers all the employees under Dumbledore's organization",
              "active" : true
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CostCenter"
            }
          }
        }
      },
      "inline_response_200_17" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
            "format" : "int32"
          },
          "resource_type" : {
            "type" : "string",
            "example" : "Projects"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/projects"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of objects returned in this response",
            "format" : "int32",
            "example" : 1
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Project"
            }
          }
        }
      },
      "inline_response_200_18" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Project"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/projects/count"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of items that matches the request parameters",
            "format" : "int32",
            "example" : 18
          }
        }
      },
      "inline_response_200_19" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "A cursor for use in pagination. offset is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include offset=obj_foo in order to fetch the next page of the list.",
            "format" : "int32"
          },
          "resource_type" : {
            "type" : "string",
            "example" : "Balance Transfers"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/balance_transfers"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of objects returned in this response",
            "format" : "int32",
            "example" : 1
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BalanceTransfer"
            }
          }
        }
      },
      "inline_response_200_20" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Balance Transfer"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/balance_transfers/count"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of items that matches the request parameters",
            "format" : "int32",
            "example" : 18
          }
        }
      },
      "body_1" : {
        "required" : [ "event_id, target_url" ],
        "type" : "object",
        "properties" : {
          "event_id" : {
            "type" : "integer",
            "description" : "3 - Report Created; 4 - Report Updated; 5 - Report Deleted; 6 - Advance Created; 7 - Advance Updated; 8 - Advance Deleted; 9 - Balance Transfer Created; 10 - Balance Transfer Updated; 11 - Balance Transfer Deleted; 12 - Refund Created; 13 - Refund Updated; 14 - Refund Deleted; 15 - Reimbursement Created; 16 - Reimbursement Updated; 17 - Reimbursement Deleted",
            "format" : "int32",
            "enum" : [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ]
          },
          "target_url" : {
            "type" : "string",
            "format" : "uri",
            "example" : "https://example.com/callback_url"
          }
        }
      },
      "inline_response_200_21" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Export"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/exports"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Export"
            }
          }
        }
      },
      "body_2" : {
        "required" : [ "object_id", "object_type", "status" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExportNotify"
            }
          }
        }
      },
      "inline_response_200_22" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Export"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/exports"
          },
          "ids" : {
            "type" : "array",
            "example" : [ "expDGLBDaoNlL", "expy8crBynJM" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_200_23" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Export"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/exports/count"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of items that matches the request parameters",
            "format" : "int32",
            "example" : 18
          }
        }
      },
      "inline_response_200_24" : {
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "example" : "Export"
          },
          "url" : {
            "type" : "string",
            "example" : "/api/tpa/v1/export/{export_id}"
          },
          "data" : {
            "$ref" : "#/components/schemas/Export"
          }
        }
      }
    },
    "securitySchemes" : {
      "oAuthImplicitScheme" : {
        "type" : "oauth2",
        "description" : "This API uses OAuth 2 with implicit code grant flow.",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "https://staging.fyle.in/#/oauth/authorize"
          }
        }
      }
    }
  }
}